Candidate miRNA regulatory hub identification pipeline:
This pipeline is intended to compute the predicted impact for each miRNA in a set (typically those highly expressed in a particular cell type) on a network of genes (typically those relevant to the study of a disease relevant to that cell type), and to predict candidate miRNAs that may act as regulatory hubs in that cell type for a particular disease or pathway. 

Inputs:
	A list of predicted target sites for miRNA families in the multiple-sequence aligned 3’-UTRs of all genes for a set of species. This output can be generated from TargetScan (http://www.targetscan.org).
	A list containing the conservation (number of species) of each of the miRNA families included in the above TargetScan predictions.  This list was parsed out of the TargetScan input files.
	A list of high confidence protein-protein interactions. This list was derived from the STRING 9.0 database (http://string-db.org/) using only those interactions having an interaction score greater than 700 (high-confidence). All protein identifiers were mapped to their corresponding gene symbol, and this symbol must match those used in the TargetScan predictions.
	A list of miRNA families:  This list contains the miRNAs the user wishes to include in the simulations. All miRNAs must be in the TargetScan miRNA family name format, and must match the family names in the Target Scan output file.
	Gene list: A list of genes to use as central nodes in a gene network.  Typically this list includes a set of genes relevant to the study of a particular disease or pathway. Currently all gene names must match the gene symbol used in the TargetScan 3’-UTR sequence files.

Parameters:
	C: Conservation level. Requested minimum level of conservation of each miRNA and target site required for a miRNA - gene interaction to be scored in the simulation.
	N: Number of iterations. Requested number of random gene networks of similar design that are used to generate score distributions.
	α: Hub weighting. This parameter is used to weight the contribution of the number of high-confidence protein-protein interactions to the target scoring function. 

************************************************************************************************************************************

To run with default libraries:
1: perl miRhub.pl my_miRList.txt myGeneList.txt OUTPUT_NAME  NUM_ITERATIONS SPECIES_ID CONS_LEVEL NET ALPHA
   my_miRList.txt : miRNA family list: (1 column with miRNA names).
   myGeneList.txt : Gene list : (1 column with Human gene symbol: GLIS3 not Glis3).
   OUTPUT_NAME : Name results will be saved as
   NUM_ITERATIONS  : number of iterations to run
   SPECIES_ID: 9606 (human) or 10090 (mouse).
   CONS_LEVEL : # additional species the target sites must be conserved in. 
   (NET) : 1 for Network (account for centrality of a protein in a network); 0 for List mode. Default =1.
   (ALPHA) : Weighting on # of protein - protein interactions. Default=3.

2: Generate summary resutls: perl summary.pl OUTPUT_NAME(from step 1) myGeneList.txt(from step 1)

************************************************************************************************************************************

miRNA scoring algorithm:
A gene network is compiled using the input files for (1) the input gene list and (2) each of the N requested random gene networks. The input gene network contains all genes in the input gene list that have a 3’-UTR listed in the target prediction files, a weighted set of scores for each target site within each gene, and the number of high confidence protein - protein interactions listed for that gene in the STRING 9.0 database. Each random gene network is generated by selecting a set of random genes having connectivity similar to each of those in the input gene list. A gene is said to have similar connectivity if the gene has a similar number of high confidence interactions in the STRING 9.0 database. To compute groups of genes with similar connectivity, we group each gene in the STRING 9.0 database by the number of high confidence protein-protein interactions that gene has.  If any group contains fewer than 20 genes, the group is expanded to include neighboring groups (with both higher and lower number of interactions) until the new super-group contains at least 20 genes. Finally a score is computed for each gene network (input gene network and N random gene networks) each miRNA family in the input list, and an empirical p-value is computed. The p-value is calculated as p=(Nr+1)/(N+1), where Nr is the number of random gene networks in which the targeting score for a particular miRNA was greater or equal to the score of that miRNA in the input gene network. The miRNA targeting score is calculated using the following procedure:

For a gene network G(L,D,U): where L is the list of genes in the network, D is the number of high confidence protein-protein interactions that each gene has, and U is the ratio of the average 3’-UTR length in the input gene network over the average 3’-UTR length in the current gene network (note: this value is one when scoring the input gene network).


foreach miR_i in miRlist  having a conservation of at least C:
   foreach gene_j in L:
      foreach target site k of miR_i in gene_j:
	 ScoreA_ijk={1.5      if 8mer-1a
		     1.25     if 7mer-m8
		     1        otherwise}
	 ScoreB_ijk={ScoreA_ijk    if site is conserved in≥C species
		     0		 otherwise}

foreach miR_i in miRlist  having a conservation of at least C:
   Score_i=0
   foreach gene_j in L:
      ScoreC_ij=ScoreB_ij0
      foreach additional target site k of miR_i in gene_j:
			
	 ScoreC_ij +={(0.5*ScoreB_ijk		if (Pos_k-Pos_(k-1))≤8
		       1.5*ScoreB_ijk		if 8<(Pos_k-Pos_(k-1))<60
		       ScoreB_ijk		if (Pos_k-Pos_(k-1))≥60)}
where Pos_k is the position of target site k within the 3’-UTR of gene_j.

      Score_i += U*ScoreC_ij (1+α*log10(D_j))  
   Score_i=Score_i⁄(size(L))


************************************************************************************************************************************

To generate custom target predictions:
0: Download code and input files from (www.targetscan.org)
1: Generate miRNA input file (column 1-> miR-family name; column 2 -> RNA seed sequence; column 3 -> Species id).
2: Generate UTR File: awk '{print $3":"$1"\t"$4"\t"$5}' UTR_Sequences.txt > UTR_file.txt; Then grep for the species you wish to run (no processing for all).
3: Run targetscan_60.pl using miRNA input file (step 1) and UTR file (step 2).  perl targetscan_60.pl miRNAList UTR_file_species.txt OutFileName.txt
4: Parse Target scan output: perl parseTS_out.pl OutFileName.txt ParsedFileName.txt 9606
5: Add UTR length to parsed file: perl addUTRlength.pl ParsedFileName.txt UTR_file_species.txt 9606 > ParsedFile_withLength.txt
6: Modify miRhub code: Change $ScoreCard variable to the full path of this file (generated in step 5).
7: Generate a file with the conservation level of each miRNA you are predicting. (column 1 -> miRNA family name; column 2 -> # species conserved in (in you UTR file)).  
Then add this file to the $miRConLev variable in miRhub code.  


************************************************************************************************************************************
Example conversion of miR-names to miR-families
convertAffy2miRfamily.pl 

This script takes in a list Affy mouse probes and converts to the miRNA family name format.  If a seed is not found in the input file (miR_Family_info.txt: targetcan.org), NF is printed. Otherwise the miR-Family name is printed.
To use this script to generate a miR-list as input to miRhub, use the following command (where Affy-prob-list.txt contains the probes of intrest from your array).

perl convertAffy2miRfamily.pl Affy-probe-list.txt   |sort |uniq |grep -v NF > my_miRfamilyList.txt
